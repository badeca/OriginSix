/* Configurações iniciais resetando o CSS */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ul {
  list-style: none;
}

a {
  text-decoration: none; /* tira o underline */
}

img {
  width: 100%;
  height: auto;
}

/* Setando variáveis */
:root {
  font-size: 100%; /*  100% = 16px */
  --header-height: 4.5rem;

  /* colors */
  --hue: 159;
  /* HSL color mode */
  --base-color: hsl(var(--hue) 36% 57%);
  --base-color-second: hsl(var(--hue) 65% 88%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0% 98%);
  --body-color: hsl(0 0% 98%);
}

html {
  scroll-behavior: smooth;
}

/********** Trataremos agora do Header e configurações gerais **********/
body {
  font: 400 1rem 'DM Sans', sans-serif; /*peso, altura, família*/
  color: var(--text-color);
  background: var(--body-color);
  -webkit-font-smoothing: antialiased;
}

.tittle {
  font: 700 1.875rem 'Poppins', sans-serif;
  color: var(--title-color);
  -webkit-font-smoothing: auto;
}

.button {
  background-color: var(--base-color);
  color: var(--text-color-light);
  height: 3.5rem;
  display: inline-flex;
  align-items: center;
  /* display padrão: inline -> não recebe nem altura nem largura que extrapole o tamanho do conteúdo
  display: block -> recebe altura, mas a largura se adapta ao primeiro limite (no caso seria o do container)
  inline-block -> recebe altura e mantém o inline para a largura */
  padding: 0 2rem;
  border-radius: 0.25rem;
  font: 500 1rem 'DM Sans', sans-serif;
  transition: background 0.3s;
}

.button:hover {
  background: var(--base-color-alt);
}

.divider-1 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 36%, 57%, 1) 0%,
    hsla(var(--hue), 65%, 88%, 0.34) 100%
      /* #69b99d 0%,
    rgba(204, 244, 230, 0.34) 100% */
  );
}

/* 
  # refere-se a ids 
  . refere-se a classes
  rem = root element
  se a altura for 72, deve-se colocar 72/16 = 4.5
  é importante para adaptação em diferentes tamanhos de tela
*/
#header {
  /* height: 4.5rem; */
  border-bottom: 1px solid #e4e4e4;
  margin-bottom: 2rem;
  width: 100%;
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  background-color: var(--body-color);
}

#header.scroll {
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.2);
}

main {
  margin-top: calc(var(--header-height) + 2rem);
}

/********** NAVIGATION **********/
nav {
  height: var(--header-height);
  display: flex;
  align-items: center;
  justify-content: space-between; /* coloca o nav no canto direito do container */
  width: 100%; /* o filho precisa ter a mesma largura que o pai pelo display flex */
}

nav ul li {
  text-align: center;
}

nav ul li a {
  transition: color 0.3s; /* há outras configurações de transição no transition  */
  position: relative;
}

nav ul li a:hover {
  color: var(--base-color);
}

/* pseudoelemento */
nav ul li a::after {
  content: '';
  width: 0;
  height: 2px;
  background: var(--base-color);
  position: absolute; /* absoluto em relação ao próximo pai dele que tiver position relative, escolhemos o "a" */
  left: 0;
  bottom: -1.5rem;

  transition: width 0.2s;
}

nav ul li a:hover::after {
  width: 100%;
}

/* esconde o menu */
nav .menu {
  opacity: 0;
  visibility: hidden;
  top: -20rem;
  transition: 0.2s;
}

nav .menu ul {
  display: none; /* ele some dps de clicar no menu, para depois aparecer de novo certinho */
}

/********** Quando o menu está aparecendo no mobile **********/
/* quando nav receber a classe show (através do js) */
nav.show .menu {
  opacity: 1;
  visibility: visible;

  background: var(--body-color);
  height: 100vh; /* 100% da viewport height */
  width: 100vw;
  position: fixed;
  top: 0;
  left: 0;

  display: grid; /* dá novas oportunidades de display */
  place-content: center;
}

nav.show .menu ul {
  display: grid; /* faz o menu reaparecer */
}

nav.show ul.grid {
  gap: 4rem;
}

.toggle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer; /* deixa a mãozinha do mickey quando passa o mouse em cima */
}

/* toggle menu */
nav .icon-close {
  opacity: 0;
  visibility: hidden;
  position: absolute;
  right: 1.5rem;
  top: -1.5rem;
  transition: 0.2s;
}

nav.show .icon-close {
  opacity: 1;
  visibility: visible;
  top: 1.5rem;
}

/********** LOGO **********/
.logo {
  font: 700 1.31rem 'Poppins', sans-serif;
  color: var(--title-color);
}

.logo span {
  color: var(--base-color);
}

.container {
  /* width: 100%; */
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.grid {
  display: grid; /* permite novas propriedades para o display */
  gap: 2rem;
}

/* no fim e no início de cada section há uma separação de 80px */
.section {
  padding: 5rem 0;
}

.section .tittle {
  margin-bottom: 1rem;
}

.section header {
  margin-bottom: 4rem;
}

.section header strong {
  color: var(--base-color);
}

/********** Trataremos agora da Home **********/

#home {
  overflow: hidden; /* limita a imagem ao tamanho do home */
}

#home .container {
  margin: 0;
}

#home .image {
  position: relative; /* posicionamento da imagem relativo à classe imagem, o contrário disso seria position: absolute; que seria relativo à página inteira */
}

/* utilizando um pseudo elemento */
#home .image::before {
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -16.8%; /* o cálculo relativo (regra de três) comparado ao tamanho completo da imagem e o tamanho do espaçamento */
  left: 16.7%;
  z-index: 0; /* 1 permite que o pseudo elemento fique à frente da imagem */
}

#home .image img {
  position: relative;
  right: 2.93rem; /* só é possível por conta do position: relative */
}

#home .image img,
#home .image::before {
  border-radius: 0.25rem;
}

#home .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: center;
}

#home .text h1 {
  margin-bottom: 1rem;
}

#home .text p {
  margin-bottom: 2rem;
  max-width: 100%; /* para não passar o limite do tamanho da página */
}

/********** Trataremos agora do About **********/

#about {
  background: white;
}

#about .container {
  margin: 0;
}

#about .image {
  position: relative; /* posicionamento da imagem relativo à classe imagem, o contrário disso seria position: absolute; que seria relativo à página inteira */
}

/* utilizando um pseudo elemento */
#about .image::before {
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -8.3%; /* o cálculo relativo (regra de três) comparado ao tamanho completo da imagem e o tamanho do espaçamento */
  left: -33%;
  z-index: 0; /* 1 permite que o pseudo elemento fique à frente da imagem */
}

#about .image img {
  position: relative;
}

#about .image img,
#about .image::before {
  border-radius: 0.25rem;
}

#about .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.divider-2 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 65%, 88%, 0.34) 0%,
    hsla(var(--hue), 36%, 57%, 1) 100%
      /* #69b99d 0%,
    rgba(204, 244, 230, 0.34) 100% */
  );
}

/********** Trataremos agora do Services **********/

.cards.grid {
  gap: 1.5rem;
}

.card {
  padding: 3.625rem 2rem;
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.08);
  border-bottom: 0.25rem solid var(--base-color);
  border-radius: 0.25rem 0.25rem 0 0;
  text-align: center;
}

.card i {
  display: block;
  margin-bottom: 1.5rem;
  font-size: 5rem;
  color: var(--base-color);
}

.card tittle {
  font-size: 1.5rem;
  margin-bottom: 0.74rem;
}
